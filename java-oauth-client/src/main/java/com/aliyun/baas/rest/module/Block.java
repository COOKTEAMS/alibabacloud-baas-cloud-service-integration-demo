/*
 * BaaS API Gateway
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.aliyun.baas.rest.module;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Block
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-12T03:32:15.669Z[GMT]")
public class Block {
  @JsonProperty("number")
  private Integer number = null;

  @JsonProperty("hash")
  private String hash = null;

  @JsonProperty("previous_hash")
  private String previousHash = null;

  @JsonProperty("create_time")
  private Integer createTime = null;

  @JsonProperty("transactions")
  private List<String> transactions = new ArrayList<String>();

  @JsonProperty("data")
  private Object data = null;

  public Block number(Integer number) {
    this.number = number;
    return this;
  }

   /**
   * The index(heigh) of the block
   * @return number
  **/
  @Schema(required = true, description = "The index(heigh) of the block")
  public Integer getNumber() {
    return number;
  }

  public void setNumber(Integer number) {
    this.number = number;
  }

  public Block hash(String hash) {
    this.hash = hash;
    return this;
  }

   /**
   * The hex encoded hash of the block
   * @return hash
  **/
  @Schema(required = true, description = "The hex encoded hash of the block")
  public String getHash() {
    return hash;
  }

  public void setHash(String hash) {
    this.hash = hash;
  }

  public Block previousHash(String previousHash) {
    this.previousHash = previousHash;
    return this;
  }

   /**
   * The hex encoded hash of the previous block
   * @return previousHash
  **/
  @Schema(required = true, description = "The hex encoded hash of the previous block")
  public String getPreviousHash() {
    return previousHash;
  }

  public void setPreviousHash(String previousHash) {
    this.previousHash = previousHash;
  }

  public Block createTime(Integer createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Block create time in unix timestamp
   * @return createTime
  **/
  @Schema(required = true, description = "Block create time in unix timestamp")
  public Integer getCreateTime() {
    return createTime;
  }

  public void setCreateTime(Integer createTime) {
    this.createTime = createTime;
  }

  public Block transactions(List<String> transactions) {
    this.transactions = transactions;
    return this;
  }

  public Block addTransactionsItem(String transactionsItem) {
    this.transactions.add(transactionsItem);
    return this;
  }

   /**
   * Get transactions
   * @return transactions
  **/
  @Schema(required = true, description = "")
  public List<String> getTransactions() {
    return transactions;
  }

  public void setTransactions(List<String> transactions) {
    this.transactions = transactions;
  }

  public Block data(Object data) {
    this.data = data;
    return this;
  }

   /**
   * Real data of the transaction
   * @return data
  **/
  @Schema(description = "Real data of the transaction")
  public Object getData() {
    return data;
  }

  public void setData(Object data) {
    this.data = data;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Block block = (Block) o;
    return Objects.equals(this.number, block.number) &&
        Objects.equals(this.hash, block.hash) &&
        Objects.equals(this.previousHash, block.previousHash) &&
        Objects.equals(this.createTime, block.createTime) &&
        Objects.equals(this.transactions, block.transactions) &&
        Objects.equals(this.data, block.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(number, hash, previousHash, createTime, transactions, data);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Block {\n");
    
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    previousHash: ").append(toIndentedString(previousHash)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
