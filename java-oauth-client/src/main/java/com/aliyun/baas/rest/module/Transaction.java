/*
 * BaaS API Gateway
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.aliyun.baas.rest.module;

import java.util.Objects;
import java.util.Arrays;
import com.aliyun.baas.rest.module.Event;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Transaction
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-12T03:32:15.669Z[GMT]")
public class Transaction {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("state")
  private String state = null;

  @JsonProperty("from")
  private String from = null;

  @JsonProperty("to")
  private String to = null;

  @JsonProperty("input")
  private String input = null;

  @JsonProperty("data")
  private Object data = null;

  @JsonProperty("events")
  private List<Event> events = new ArrayList<Event>();

  public Transaction id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The id of the transaction
   * @return id
  **/
  @Schema(description = "The id of the transaction")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Transaction state(String state) {
    this.state = state;
    return this;
  }

   /**
   * The state of the transaction, VALID or INVALID
   * @return state
  **/
  @Schema(required = true, description = "The state of the transaction, VALID or INVALID")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public Transaction from(String from) {
    this.from = from;
    return this;
  }

   /**
   * Creator identity of the transaction. It&#x27;s [MSPID].[username] in HyperLedger Fabric.
   * @return from
  **/
  @Schema(required = true, description = "Creator identity of the transaction. It's [MSPID].[username] in HyperLedger Fabric.")
  public String getFrom() {
    return from;
  }

  public void setFrom(String from) {
    this.from = from;
  }

  public Transaction to(String to) {
    this.to = to;
    return this;
  }

   /**
   * The desitinition of the transaction. It&#x27;s chaincode name in HyperLedger Fabric.
   * @return to
  **/
  @Schema(required = true, description = "The desitinition of the transaction. It's chaincode name in HyperLedger Fabric.")
  public String getTo() {
    return to;
  }

  public void setTo(String to) {
    this.to = to;
  }

  public Transaction input(String input) {
    this.input = input;
    return this;
  }

   /**
   * The input data of the transaction. It&#x27;s invoke arguments of chaincode in HyperLedger Fabric.
   * @return input
  **/
  @Schema(required = true, description = "The input data of the transaction. It's invoke arguments of chaincode in HyperLedger Fabric.")
  public String getInput() {
    return input;
  }

  public void setInput(String input) {
    this.input = input;
  }

  public Transaction data(Object data) {
    this.data = data;
    return this;
  }

   /**
   * Real data of the transaction
   * @return data
  **/
  @Schema(description = "Real data of the transaction")
  public Object getData() {
    return data;
  }

  public void setData(Object data) {
    this.data = data;
  }

  public Transaction events(List<Event> events) {
    this.events = events;
    return this;
  }

  public Transaction addEventsItem(Event eventsItem) {
    this.events.add(eventsItem);
    return this;
  }

   /**
   * Get events
   * @return events
  **/
  @Schema(required = true, description = "")
  public List<Event> getEvents() {
    return events;
  }

  public void setEvents(List<Event> events) {
    this.events = events;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Transaction transaction = (Transaction) o;
    return Objects.equals(this.id, transaction.id) &&
        Objects.equals(this.state, transaction.state) &&
        Objects.equals(this.from, transaction.from) &&
        Objects.equals(this.to, transaction.to) &&
        Objects.equals(this.input, transaction.input) &&
        Objects.equals(this.data, transaction.data) &&
        Objects.equals(this.events, transaction.events);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, state, from, to, input, data, events);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Transaction {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
